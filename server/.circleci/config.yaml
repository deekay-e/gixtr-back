version: 2.1
orbs:
  codecov: codecov/codecov@3.2.5
  aws-cli: circleci/aws-cli@4.0.0
  slack: circleci/slack@4.12.5
executors:
  app-init:
    docker:
      - image: cimg/node:20.17.0
      - image: cimg/redis:7.2.5
      - image: 'cibuilds/base:latest'
    working_directory: ~/repo
  terraform-init:
    docker:
      - image: hashicorp/terraform:latest
  slack-init:
    docker:
      - image: 'cibuilds/base:latest'
    resource_class: small

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &zip-project
    run:
      name: Zip project
      command: |
          rm -rf node_modules
          zip gxitr.zip -r .
          echo "Zip successful"

jobs:
  build:
    executor: app-init
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  code-lint:
    executor: app-init
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Run linting
          command: npm run lint:check
      - *notify-on-fail

  code-format:
    executor: app-init
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Run prettier check
          command: npm run prettier:check
      - *notify-on-fail

  code-test:
    executor: app-init
    steps:
      - checkout
      - setup_remote_docker
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Start redis server
          command: docker run --name gixtr-redis -p 6379:6379 -d redis
          background: true
      - run:
          name: Run unit test
          command: |
            sleep 3
            npm run test
      - codecov/upload
      - *notify-on-fail

  terraform-validate:
    executor: terraform-init
    steps:
      - checkout
      - *show-current-branch-name
      - run:
          name: Terraform validate & format
          command: |
            cd deployment/
            terraform init -backend=false
            terraform validate
            terraform fmt
      - *notify-on-fail

  terraform-plan-and-apply:
    executor: terraform-init
    steps:
      - checkout
      - *show-current-branch-name
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Terraform plan
          command: |
            cd deployment/
            terraform init
            terraform workspace select ${CIRCLE_BRANCH} || terraform workspace new ${CIRCLE_BRANCH}
            terraform plan
      - run:
          name: Terraform apply
          command: |
            cd deployment/
            terraform workspace select ${CIRCLE_BRANCH}
            terraform apply -auto-approve
      - *notify-on-fail

  upload-project-to-s3:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - *zip-project
      - run:
          name: Upload project to S3
          command: |
            aws --region us-east-1 s3 cp gxitr.zip s3://gixtr-server-${CIRCLE_BRANCH}-app
      - *notify-on-fail
